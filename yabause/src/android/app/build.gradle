/*
        Copyright 2019 devMiyax(smiyaxdev@gmail.com)

This file is part of YabaSanshiro.

        YabaSanshiro is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

YabaSanshiro is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
along with YabaSanshiro; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
*/

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'


android {
    signingConfigs {
        pro {
            if( System.getenv('KEY_FILE_NAME') == null ){
                storeFile file("dmy")
            }else {
                storeFile file(System.getenv('KEY_FILE_NAME'))
            }
            storePassword System.getenv('STORE_PASSWORD')
            keyAlias System.getenv('KEY_ALIAS')
            keyPassword System.getenv('KEY_PASSWORD')
        }
        release {
            if( System.getenv('KEY_FILE_NAME') == null ){
                storeFile file("dmy")
            }else {
                storeFile file(System.getenv('KEY_FILE_NAME'))
            }
            storePassword System.getenv('STORE_PASSWORD')
            keyAlias System.getenv('KEY_ALIAS')
            keyPassword System.getenv('KEY_PASSWORD')
        }
    }

    sourceSets {
        test.java.srcDirs += 'src/test/java'
        androidTest.java.srcDirs += 'src/androidTest/java'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        applicationId "org.uoyabause.uranus"
        minSdkVersion 21
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 141
        versionName '3.3.1'
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        signingConfig signingConfigs.pro
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

/*
        externalNativeBuild {

            // For ndk-build, instead use ndkBuild {}
            cmake {

                //cd  Passes optional arguments to CMake.
                arguments "-DANDROID_ABI=armeabi-v7a","-DANDROID_NATIVE_API_LEVEL=19","-DYAB_PORTS=android",
                        "-DYAB_WANT_C68K=FALSE","-DYAB_WANT_ARM7=TRUE","-DYAB_WANT_DYNAREC_DEVMIYAX=TRUE",
                        "-DANDROID_FORCE_ARM_BUILD=FALSE","-DCMAKE_BUILD_TYPE=Release"
            }
        }
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'armeabi-v7a'
        }
*/
     }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                renameAPK(variant, defaultConfig, 'R')
            }
            resValue "string", "app_name", "Yaba Sanshiro"
        }
        pro {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".pro"
            versionNameSuffix '-PRO'
            buildConfigField 'String', 'AUTHORITY', '"org.uoyabause.uranus.pro.contentprovider"'
            resValue "string", "app_name", "Yaba Sanshiro Pro"
            applicationVariants.all { variant ->
                renameAPK(variant, defaultConfig, 'P')
            }
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix '-DEBUG'
            resValue "string", "app_name", "Yaba Sanshiro debug"
            buildConfigField 'String', 'AUTHORITY', '"org.uoyabause.uranus.debug.contentprovider"'
            packagingOptions {
                doNotStrip "**/*/*.so"
            }
        }
    }

    lintOptions {
        abortOnError false
    }
/*
    externalNativeBuild {
        cmake {
            path '../../../CMakeLists.txt'
        }
    }
*/
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/jniLibs'
    androidNdkLibsOut 'src/main/jniLibs'
    manifestPath 'src/main/AndroidManifest.xml'
}

def renameAPK(variant, defaultConfig, buildType) {
    variant.outputs.all {
        def formattedDate = new Date().format('yyMMdd')
        outputFileName = "${applicationName}-V${variant.versionCode}-${variant.versionName}-${formattedDate}-${variant.name}.apk"
    }
}

allprojects {
    repositories {
        maven {
            url "https://maven.google.com"
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'http://fan-adn.github.io/nendSDK-Android-lib/library' }
        maven { url "http://dl.bintray.com/cattaka/maven" }

        jcenter()
    }
}

task printVersionName {
    doLast {
        println android.defaultConfig.versionName
    }
}

//repositories {
//    mavenCentral()
//    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
//    maven { url 'http://fan-adn.github.io/nendSDK-Android-lib/library' }
//    maven { url 'https://maven.fabric.io/public' }
//}

//repositories {
//    mavenCentral()
//    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
//    maven { url 'http://fan-adn.github.io/nendSDK-Android-lib/library' }
//    maven { url 'https://maven.fabric.io/public' }
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.leanback:leanback:1.1.0-alpha03'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.tvprovider:tvprovider:1.0.0'

    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
    implementation 'com.google.firebase:firebase-core:17.4.2'
    implementation 'com.google.firebase:firebase-database:19.3.0'
    implementation 'com.google.firebase:firebase-storage:19.1.1'
    implementation 'com.google.firebase:firebase-ads:19.1.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.0'
    implementation 'com.google.firebase:firebase-config:19.1.4'
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    //implementation 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
    implementation files('libs/activeandroid-3.1.0-SNAPSHOT.jar')
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'commons-io:commons-io:2.5'
    implementation 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.crashlytics.sdk.android:crashlytics-ndk:2.1.1'
    implementation 'net.cattaka:adapter-toolbox:0.5.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'net.nend.android:nend-sdk:5.2.0'
    implementation "com.google.android.material:material:1.2.0-beta01"

    // Add the In-App Messaging dependency:
    implementation 'com.google.firebase:firebase-inappmessaging-display:19.0.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'

    def preference_version = "1.1.1"

    // Java
    implementation "androidx.preference:preference:$preference_version"
    // Kotlin
    implementation "androidx.preference:preference-ktx:$preference_version"

    implementation "io.noties.markwon:core:4.1.0"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.test.ext:junit-ktx:1.1.1"
    testImplementation "androidx.test:core-ktx:1.2.0"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
